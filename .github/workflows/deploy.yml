name: Secure Copy Deployment

on:
  push:
    # support either of the 2 common "main" branch names
    branches:
      - master
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright Binaries
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('package-lock.json') }}
          
      - name: Install Playwright browsers w/deps
        id: install-playwright-browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps    

      - name: Build resume (HTML and PDF)
        if: ${{ success() }}
        run: npm run build
        env:
          RESUME_DATA: ${{ secrets.RESUME_DATA }}

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        if: ${{ success() }}
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME}}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          source: "output/resume.pdf,output/style.css,output/fonts/*.woff2,output/resume.html"
          target: ${{ secrets.DEPLOY_DIR }}
          # this will remove the 'output' part of the source path on the target
          strip_components: 1
          overwrite: 1
